name: Build KernelSU Next

on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8475'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace2_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'waipio'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android12'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.10'
      BUILD_METHOD:
        description: "编译方式"
        required: true
        default: 'gki'
      KSUNEXT_ENABLED:
        description: "添加 KSU Next"
        required: true
        type: boolean
        default: true
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
      SUSFS_VERSION:
        description: "SUSFS 版本"
        required: true
        default: 'v1.5.5'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 优化构建环境
      - name: Optimize build environment
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      # 安装必要工具
      - name: Install build tools
        run: |
          sudo apt update -y && sudo apt upgrade -y
          sudo apt install -y python3 git curl bc bison flex libssl-dev make
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo
          chmod +x /usr/local/bin/repo

      # 配置 Git
      - name: Configure Git user
        run: |
          git config --global user.name "build"
          git config --global user.email "${{ secrets.EMAIL || '70756062@qq.com' }}"

      # 初始化内核仓库
      - name: Initialize and sync kernel repository
        run: |
          mkdir -p kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync -j8
          rm -f kernel_platform/{common/android,msm-kernel}/abi_gki_protected_exports_* 2>/dev/null || echo "No protected exports!"
          sed -i 's/ -dirty//g' kernel_platform/{common,msm-kernel}/scripts/setlocalversion

      # 配置 LTO 为 THIN
      - name: Enable Thin LTO
        run: |
          cd kernel_workspace/kernel_platform
          sed -i -e 's/CONFIG_LTO=n/CONFIG_LTO=y/' \
                 -e 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' \
                 -e 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' \
                 ./common/arch/arm64/configs/gki_defconfig

      # 集成 KernelSU Next
      - name: Integrate KernelSU Next
        if: github.event.inputs.KSUNEXT_ENABLED == 'true'
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
          cd KernelSU-Next
          KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      # 集成 SUSFS
      - name: Integrate SUSFS
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }} --depth=1
          git clone https://github.com/TheWildJames/kernel_patches.git --depth=1
          cd kernel_platform
          # 应用 susfs4ksu 补丁
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp -r ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp -r ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          # 应用 SUSFS v1.5.5 补丁
          cd KernelSU-Next
          cp ../../kernel_patches/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-7a08683c7.patch ./
          echo "Debug: Applying SUSFS patch to KernelSU-Next"
          patch -p1 < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-7a08683c7.patch || echo "SUSFS patch failed, continuing anyway"
          if [ -f kernel/throne_tracker.h.rej ]; then
            echo "Debug: Contents of kernel/throne_tracker.h.rej:"
            cat kernel/throne_tracker.h.rej
          fi
          # 应用其他补丁
          cd ../common
          echo "Debug: Applying SUSFS GKI patch"
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || exit 1
          cp ../../kernel_patches/69_hide_stuff.patch ./
          echo "Debug: Applying hide stuff patch"
          patch -p1 -F 3 < 69_hide_stuff.patch || exit 1
          # 提交更改
          git add -A && git commit -m "Integrate SUSFS into kernel" || true
          cd ../msm-kernel && git add -A && git commit -m "Integrate SUSFS into msm-kernel" || true

      # 配置内核选项
      - name: Configure kernel options
        run: |
          cd kernel_workspace/kernel_platform/common
          make -C . O=../out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- gki_defconfig
          cat << EOF >> ../out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/.config
          CONFIG_KPROBES=y
          CONFIG_HAVE_KPROBES=y
          CONFIG_KPROBE_EVENTS=y
          CONFIG_KSU=y
          CONFIG_KSU_WITH_KPROBES=y
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
          CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=y
          CONFIG_SECURITY_SELINUX=y
          EOF
          make -C . O=../out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig

      # 编译内核
      - name: Compile kernel
        run: |
          cd kernel_workspace
          ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}

      # 打包内核
      - name: Package kernel with AnyKernel3
        run: |
          cd kernel_workspace
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf AnyKernel3/.git
          cp kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/dist/Image ./AnyKernel3/

      # 上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: KernelSU_Next_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
          path: |
            kernel_workspace/AnyKernel3/*
            kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image
